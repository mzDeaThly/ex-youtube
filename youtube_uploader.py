import os
import base64
import json
import pickle
import datetime

from google.auth.transport.requests import Request
from google_auth_oauthlib.flow import InstalledAppFlow
from googleapiclient.discovery import build
from googleapiclient.http import MediaFileUpload

# ----------------- 1. ‡πÇ‡∏´‡∏•‡∏î client_secret.json ‡∏à‡∏≤‡∏Å ENV -----------------
def prepare_client_secret():
    secret = os.environ.get("CLIENT_SECRET_JSON")
    if secret and not os.path.exists("client_secret.json"):
        with open("client_secret.json", "w") as f:
            f.write(base64.b64decode(secret).decode())

# ----------------- 2. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î YouTube -----------------
def upload_video(file, title, description, tags=[]):
    """‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡∏Ç‡∏∂‡πâ‡∏ô YouTube"""
    prepare_client_secret()

    SCOPES = ["https://www.googleapis.com/auth/youtube.upload"]
    creds = None

    # ‡πÇ‡∏´‡∏•‡∏î token.json ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
    if os.path.exists("token.json"):
        with open("token.json", "rb") as token:
            creds = pickle.load(token)

    # ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ token ‡∏´‡∏£‡∏∑‡∏≠‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏
    if not creds or not creds.valid:
        if creds and creds.expired and creds.refresh_token:
            creds.refresh(Request())
        else:
            flow = InstalledAppFlow.from_client_secrets_file("client_secret.json", SCOPES)
            creds = flow.run_local_server(port=0)
        # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å token ‡πÉ‡∏´‡∏°‡πà
        with open("token.json", "wb") as token:
            pickle.dump(creds, token)

    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ YouTube API
    youtube = build("youtube", "v3", credentials=creds)

    # ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠
    body = {
        "snippet": {
            "title": title,
            "description": description,
            "tags": tags,
            "categoryId": "25",  # News & Politics
        },
        "status": {
            "privacyStatus": "public",  # public | unlisted | private
        },
    }

    media = MediaFileUpload(file, chunksize=-1, resumable=True, mimetype="video/*")
    request = youtube.videos().insert(part="snippet,status", body=body, media_body=media)

    print("üì§ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠...")
    response = None
    while response is None:
        status, response = request.next_chunk()
        if status:
            print(f"üì∂ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î: {int(status.progress() * 100)}%")

    print(f"‚úÖ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå: https://www.youtube.com/watch?v={response['id']}")
    return response["id"]
