import os
import openai
import requests

# ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö OpenRouter ‡∏´‡∏£‡∏∑‡∏≠ API ‡∏ó‡∏µ‡πà compatible ‡∏Å‡∏±‡∏ö OpenAI
OPENROUTER_API_KEY = os.getenv("OPENROUTER_API_KEY")

openai.api_key = OPENROUTER_API_KEY
openai.api_base = "https://openrouter.ai/api/v1"  # ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô endpoint ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£

def get_latest_news():
    """‡∏î‡∏∂‡∏á‡∏Ç‡πà‡∏≤‡∏ß‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô (query)"""
    NEWS_API_KEY = os.getenv("NEWS_API_KEY")
    queries = ["‡∏Ç‡πà‡∏≤‡∏ß", "‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡πÑ‡∏ó‡∏¢", "‡πÄ‡∏®‡∏£‡∏©‡∏ê‡∏Å‡∏¥‡∏à", "‡∏Å‡∏≤‡∏£‡πÄ‡∏°‡∏∑‡∏≠‡∏á"]

    for query in queries:
        url = f"https://newsapi.org/v2/everything?q={query}&language=th&sortBy=publishedAt&apiKey={NEWS_API_KEY}"
        response = requests.get(url)
        print(f"üì° Fetching query: {query} | Status: {response.status_code}")

        if response.status_code != 200:
            continue

        articles = response.json().get("articles", [])
        if not articles:
            continue

        first = articles[0]
        title = first.get("title")
        content = first.get("content") or first.get("description") or ""
        print(f"‚úÖ ‡∏û‡∏ö‡∏Ç‡πà‡∏≤‡∏ß: {title}")
        return title, content

    print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πà‡∏≤‡∏ß‡πÉ‡∏´‡∏°‡πà")
    return None, None


def summarize_text(content):
    """‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πà‡∏≤‡∏ß‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ GPT-4 ‡∏ú‡πà‡∏≤‡∏ô OpenRouter"""
    try:
        response = openai.ChatCompletion.create(
            model="openai/gpt-4",  # ‡∏´‡∏£‡∏∑‡∏≠ gpt-3.5-turbo ‡πÑ‡∏î‡πâ‡πÄ‡∏ä‡πà‡∏ô‡∏Å‡∏±‡∏ô
            messages=[
                {"role": "system", "content": "‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠‡∏ú‡∏π‡πâ‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πà‡∏≤‡∏ß‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢ ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏•‡∏¥‡∏õ‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠ 60 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ"},
                {"role": "user", "content": f"‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πà‡∏≤‡∏ß‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏ô‡∏µ‡πâ‡πÉ‡∏´‡πâ‡∏ô‡πà‡∏≤‡∏™‡∏ô‡πÉ‡∏à ‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏á‡πà‡∏≤‡∏¢ ‡πÅ‡∏•‡∏∞‡∏Å‡∏£‡∏∞‡∏ä‡∏±‡∏ö: \n\n{content}"}
            ],
            temperature=0.7
        )
        return response.choices[0].message.content.strip()
    except Exception as e:
        print(f"‚ùå ‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πà‡∏≤‡∏ß‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: {e}")
        return content[:300] + "..."  # fallback
